# About:
#   polishing and stats using mpileup and pilon
#
# Inputs:
#   fastqs    .. list of fastq files, comma-separated pairs, e.g:
#                   /path/1_1.fq.gz,/path/1_2.fq.gz - @RG\tID:lane1\tSM:fAstCal1
#                   /path/2_1.fq.gz,/path/2_2.fq.gz - @RG\tID:lane2\tSM:fAstCal1
#   fa_ref    .. fasta reference
#   sample    .. sample name, eg. fAstCal1
#
# Example:
#   .config:     chain.polishing-freebayes.conf
#   fastqs:      /path/to/fAstCal1.fq.list
#   fa_ref:      /path/to/fAstCal1.fa.gz
#   sample:      fAstCal1
#   runner_args: +maxjobs 500 +retries 3


# Tasks to run
steps  => [ 'index', 'fastqs', 'bwa', 'bamstats', 'freebayes', 'freebayes_fa', 'freebayes_vcfstats', 'index2', 'bwa2', 'freebayes2', 'freebayes_vcfstats2' ],


# Output files to be moved into the dropbox.out directory.  The key is the name
# of the output directory to be created in dropbox.out, the array lists the
# files to be transfered. Multiple directories and files can be given.
outputs => 
{
    'freebayes.fa'        => '$(prefix).freebayes_fa/consensus.fa',
    'freebayes.fa.fai'    => '$(prefix).freebayes_fa/consensus.fa.fai',
    'bamstats-raw'        => '$(prefix).bamstats',
    'vcfstats-freebayes'  => '$(prefix).freebayes_vcfstats',
    'vcfstats-freebayes2' => '$(prefix).freebayes_vcfstats2',
},

stop =>
{
    run => 
    [
        { cmd => '/bin/false', },
    ],
},

index =>    # index fasta reference
{
    run =>
    [
        { 
            cmd => q[run-cmds +loop -600 $(runner_args:) -C 'sanity-check-ref -s $(fa_ref) -d $(prefix).$(step)/ref.fa && bwa index $(prefix).$(step)/ref.fa' -t $(prefix).$(step) -l memory=5000],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},
index2 =>
{
    run =>
    [
        { 
            cmd => q[run-cmds +loop -600 $(runner_args:) -C 'bwa index $(prefix).freebayes_fa/consensus.fa' -t $(prefix).$(step) -l memory=5000],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},

fastqs =>   # remove 10x barcodes
{
    run =>
    [
        { 
            cmd => q[run-10x-fastq +loop -600 $(runner_args:) -s $(sample) -f $(fastqs) -o $(prefix).$(step)],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},

bwa =>      # map
{
    run =>
    [
        { 
            cmd => q[run-bwa +loop -600 $(runner_args:) -O merge:1,rmdup:1 -f2 $(prefix).fastqs/fastq.txt -r $(prefix).index/ref.fa -o $(prefix).$(step)/bwa/],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},
bwa2 =>
{
    run =>
    [
        { 
            cmd => q[run-bwa +loop -600 $(runner_args:) -O merge:1,rmdup:1 -f2 $(prefix).fastqs/fastq.txt -r $(prefix).freebayes_fa/consensus.fa -o $(prefix).$(step)/bwa/],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},

freebayes =>
{
    run =>
    [
        { 
            cmd => q[run-freebayes +loop -600 $(runner_args:) -b $(prefix).bwa/bwa/merged.rmdup.bam -f $(prefix).index/ref.fa -t $(prefix).bamstats/contigs.txt -o $(prefix).$(step)],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},
freebayes2 =>
{
    run =>
    [
        { 
            cmd => q[run-freebayes +loop -600 $(runner_args:) -b $(prefix).bwa2/bwa/merged.rmdup.bam -f $(prefix).freebayes_fa/consensus.fa -t $(prefix).bamstats/contigs.txt -o $(prefix).$(step)],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},

freebayes_fa =>
{
    run =>
    [
        {
            cmd => q[run-cmds +loop -600 $(runner_args:) -t $(prefix).$(step) -C 'bcftools consensus -i"QUAL>1" -H la -f $(prefix).index/ref.fa $(prefix).freebayes/merged.bcf > $(prefix).$(step)/consensus.fa && samtools faidx $(prefix).$(step)/consensus.fa'],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},

bamstats =>
{
    run =>
    [
        { 
            cmd => q[run-polishing-stats +loop -600 $(runner_args:) -b $(prefix).bwa/bwa/merged.rmdup.bam -f $(prefix).index/ref.fa.fai -o $(prefix).$(step)],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},

freebayes_vcfstats =>
{
    run =>
    [
        { 
            cmd => q[run-polishing-stats +loop -600 $(runner_args:) -f $(prefix).index/ref.fa.fai -o $(prefix).$(step) -c freebayes -v $(prefix).freebayes/merged.bcf -t 'freebayes, raw'],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},
freebayes_vcfstats2 =>
{
    run =>
    [
        { 
            cmd => q[run-polishing-stats +loop -600 $(runner_args:) -f $(prefix).freebayes_fa/consensus.fa.fai -o $(prefix).$(step) -c freebayes -v $(prefix).freebayes2/merged.bcf -t 'freebayes, polished'],
            status => { done=>[111], loop=>[0] },
            loop => 600,
        },
    ],
},

