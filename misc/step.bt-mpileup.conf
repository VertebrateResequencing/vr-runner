# About:
#   call variants using run-bt-mpileup
#
# Required inputs:
#   alns
#   fa_ref   
#
# Check at least these defaults:
#   mpileup
#   filter
#   


# Sequence of commands to run and expected return status
run =>
[
   { 
       cmd => q[run-bt-mpileup +loop -600 $(runner_args:) +config $(prefix).$(step).conf -o $(prefix).$(step)],
       status => { done=>[111], loop=>[0] },
       loop => 600,
   },
],


# A template for runner's config
config =>
{
    version  => '1427807557',
    
    # Add -P ILLUMINA or -P SLX if the BAMs contain also reads from different platforms. 
    mpileup  => 'bcftools mpileup -t DP,DV -C50 -pm3 -F0.2 -d10000',
    call     => 'bcftools call -vm -f GQ',
    norm     => 'bcftools norm',
    reheader => 'bcftools reheader',
    index    => 'bcftools index',
    vcfstats => 'bcftools stats -c both -s -',
    filter   => 'bcftools filter -m+ -sLowQual -e"%QUAL<=10" -g3 -G10',
    concat   => 'bcftools concat',
    htsfile  => 'htsfile',
    
    fa_ref   => 'human_g1k_v37.fasta',
    
    # alns: A single bam/cram file, a list of bam/cram files in a file,
    # or a hash which defines the population structure.
    # When the "alns" key is not a hash, the samples are grouped by the
    # @RG:SM tag from across all bams and called jointly. 
    # Otherwise, the hash controls the sex, output sample names, and
    # samples/bams to be called jointly. The following columns are recognised:
    #   grp  .. group name. Files from the same group will be called jointly. If not given, samples are called jointly.
    #   aln  .. bam/cram file name
    #   sex  .. one of the sexes defined in 'ploidy'. If not given, 'assumed_sex' is used.
    #   smpl .. sample name to call
    #   disp .. sample display name (i.e., rename sample)
    #
    # alns => 'file.bam',
    # alns => 'list_of_files.txt',
    # alns => { fname=>'file.list', columns=>['grp','aln']},
    
    # Restrict calling to the listed regions only. Provide either an
    # array or a file name with a list of regions (whitespace delimited
    # file with the columns CHR,FROM,TO).
    #
    # regions => 'regions_list.txt',
    # regions => [ qw(1:1-1000000 1:1000001-5000000) ],
    regions => [ qw(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X Y) ],
    
    assumed_sex    => 'F',   # The default sex, see also 'ploidy' definitions
    merge_chroms   => 1,     # Create whole-genome VCF or stop at per-chromosome VCFs?
    merge_groups   => 0,     # After calling each group separately, create a single VCF?
    chunk_size     => 1000000,
    do_clean       => 1,     # Remove runner's temporary files
    shuffle_chunks => 0,     # Process chunks in random order to randomize disk access
    debug_chunks   => 0,
    
    # File or array with ploidy definitions in the format accepted by
    # bcftools. If not defined, the default ploidy is used, unlisted
    # regions are diploid:
    #       X 1 60000 M 1
    #       X 2699521 154931043 M 1
    #       Y 1 59373566 M 1
    #       Y 1 59373566 F 0
    #       MT 1 16569 M 1
    #       MT 1 16569 F 1
    #
    ploidy => undef,
    
    limits   => { runtime=>24*60 },
},
