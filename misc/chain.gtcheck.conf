#
# About:
#   pipeline for running mpileup followed by genotype checking
#
# Usage:
#   echo -e "email: someone@somewhere\nbams_list: bams.list" > chain.gtcheck/dropbox.in/job.txt
#
#


# Tasks to run
tasks => [ 'mpileup', 'gtcheck' ],


# Input directories
input_dir  => 'chain.gtcheck/dropbox.in',
output_dir => 'chain.gtcheck/dropbox.out',
work_dir   => 'chain.gtcheck/dropbox.tmp',


# Define the output files
outputs => 
{ 
    vcfs => 
    [ 
        '$(prefix).gtcheck/*.vcf.gz',
        '$(prefix).gtcheck/*.vcf.gz.tbi',
    ],
},


# Configuration of individual tasks
mpileup =>
{
     # Sequence of commnads to run with expected return statuses
     run =>
     [
        { 
            cmd => q[run-st-mpileup +loop -600 +maxjobs 200 +retries 2 +config $(prefix).mpileup.conf -o $(prefix).mpileup],
            status => { done=>111, loop=>0, error=>255 },
            loop => 600,
        },
     ],

    # A template for runner's config
    config => q[

        version  => '1394700014',
        mpileup  => 'samtools mpileup -t DP -C50 -pm3 -F0.2 -d10000',
        bcftools => 'bcftools call -vm',
        vcfstats => 'bcftools stats -c both',
        filter   => 'bcftools filter -m+ -sLowQual -e"%QUAL<=10" -g3 -G10 -Ov -',
        concat   => 'bcftools concat',
        chunk_options =>
        {   
            'Y'                   => { bcftools => 'bcftools call -vm -Y', },
            'X:1-60000'           => { bcftools => 'bcftools call -vm -X', },
            'X:2699521-154931043' => { bcftools => 'bcftools call -vm -X', },
        },
        bams   => '$(bams_list)',
        fa_ref => 'ref.fasta',
        pops   =>
        {
            pooled => [ '.' ],
        },
        merge_pops        => 0,
        debug_chunks      => 0,
        shuffle_chunks    => 0,
        keep_bcfs         => 0,
        whole_genome_bams => 0,
        hard_filter       => 1,
        merge_chroms      => 1,
        chunk_size        => 1_000_000,
        assumed_sex       => 'F',
        do_clean => 1,
        chroms   => [ qw(1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 X) ],
        limits   => { runtime=>24*60 },
    ],
},
   
gtcheck =>
{
    run =>
    [
        { 
            cmd => q[bcftools gtcheck $(prefix).mpileup/pooled/all.filt.vcf.gz -p $(prefix).gtcheck/],
            status => { done=>0, error=>1 },
        },
    ],
},

